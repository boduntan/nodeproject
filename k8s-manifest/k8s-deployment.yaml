apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
data:
  MONGO_HOSTNAME: "db"
  MONGO_PORT: "27017"

---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-secret
type: Opaque
data:
  MONGO_USERNAME: eW91ci11c2VybmFtZQ==
  MONGO_PASSWORD: eW91ci1wYXNzd29yZA==
  MONGO_DB: eW91ci1kYi1uYW1l

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodejs
  template:
    metadata:
      labels:
        app: nodejs
    spec:
      containers:
        - name: nodejs
          image: node:10-alpine
          ports:
            - containerPort: 8080
          env:
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_USERNAME
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_PASSWORD
            - name: MONGO_DB
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_DB
            - name: MONGO_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: MONGO_HOSTNAME
            - name: MONGO_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: MONGO_PORT
          volumeMounts:
            - name: app-volume
              mountPath: /home/node/app
      volumes:
        - name: app-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-service
spec:
  selector:
    app: nodejs
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:4.1.8-xenial
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_PASSWORD
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
      volumes:
        - name: mongo-storage
          persistentVolumeClaim:
            claimName: mongo-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  clusterIP: None  # Headless service for internal DNS resolution
